{% extends 'base.html.twig' %}

{% block title %}Administration - {{ hotel.id ? 'Modifier' : 'Ajouter' }} un hôtel{% endblock %}

{% block body %}
<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- En-tête avec titre et bouton de retour -->
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-semibold text-gray-800">{{ hotel.id ? 'Modifier' : 'Ajouter' }} un hôtel</h1>
        <a href="{{ path('app_admin_hotels') }}" class="flex items-center px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-lg transition duration-300 ease-in-out transform hover:scale-105">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Retour à la liste
        </a>
    </div>
    
    <!-- Carte du formulaire -->
    <div class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-100">
        <div class="p-8">
            {{ form_start(form, {'attr': {'class': 'space-y-6'}}) }}
                
                <!-- Informations de base -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="space-y-2">
                        <label for="{{ form.name.vars.id }}" class="block text-sm font-medium text-gray-700">Nom de l'hôtel</label>
                        {{ form_widget(form.name, {'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 transition duration-300'}}) }}
                        {{ form_errors(form.name, {'attr': {'class': 'text-red-500 text-sm mt-1'}}) }}
                    </div>
                    
                    <div class="space-y-2">
                        <label for="{{ form.user.vars.id }}" class="block text-sm font-medium text-gray-700">Propriétaire</label>
                        {{ form_widget(form.user, {'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 transition duration-300'}}) }}
                        {{ form_errors(form.user, {'attr': {'class': 'text-red-500 text-sm mt-1'}}) }}
                    </div>
                </div>
                
                <!-- Adresse -->
                <div class="space-y-2 relative">
                    <label for="{{ form.address.vars.id }}" class="block text-sm font-medium text-gray-700">Adresse</label>
                    {{ form_widget(form.address, {'attr': {'class': 'address-autocomplete mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 transition duration-300', 'data-latitude-field': form.latitude.vars.id, 'data-longitude-field': form.longitude.vars.id}}) }}
                    {{ form_errors(form.address, {'attr': {'class': 'text-red-500 text-sm mt-1'}}) }}
                </div>
                
                <!-- Coordonnées géographiques -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="space-y-2">
                        <label for="{{ form.latitude.vars.id }}" class="block text-sm font-medium text-gray-700">Latitude</label>
                        {{ form_widget(form.latitude, {'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 transition duration-300'}}) }}
                        {{ form_errors(form.latitude, {'attr': {'class': 'text-red-500 text-sm mt-1'}}) }}
                    </div>
                    
                    <div class="space-y-2">
                        <label for="{{ form.longitude.vars.id }}" class="block text-sm font-medium text-gray-700">Longitude</label>
                        {{ form_widget(form.longitude, {'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 transition duration-300'}}) }}
                        {{ form_errors(form.longitude, {'attr': {'class': 'text-red-500 text-sm mt-1'}}) }}
                    </div>
                </div>
                
                <!-- Boutons d'action -->
                <div class="flex justify-between pt-6">
                    <a href="{{ path('app_admin_hotels') }}" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-300">
                        Annuler
                    </a>
                    <button type="submit" class="inline-flex items-center px-6 py-3 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-300 transform hover:scale-105">
                        {{ hotel.id ? 'Mettre à jour' : 'Créer' }}
                    </button>
                </div>
            {{ form_end(form) }}
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Fonction pour initialiser l'autocomplétion d'adresse
    function initAddressAutocomplete() {
        const addressInput = document.querySelector('.address-autocomplete');
        if (!addressInput) return;
        
        const latitudeField = document.getElementById(addressInput.dataset.latitudeField);
        const longitudeField = document.getElementById(addressInput.dataset.longitudeField);
        
        addressInput.addEventListener('input', function() {
            if (this.value.length < 3) return;
            
            fetch(`https://api-adresse.data.gouv.fr/search/?q=${encodeURIComponent(this.value)}&limit=5`)
                .then(response => response.json())
                .then(data => {
                    // Créer ou mettre à jour la liste de suggestions
                    let suggestionList = document.getElementById('address-suggestions');
                    if (!suggestionList) {
                        suggestionList = document.createElement('ul');
                        suggestionList.id = 'address-suggestions';
                        suggestionList.className = 'absolute w-full mt-1 bg-white rounded-md shadow-lg max-h-60 overflow-auto z-50';
                        addressInput.parentNode.appendChild(suggestionList);
                    } else {
                        suggestionList.innerHTML = '';
                    }
                    
                    // Ajouter les suggestions
                    data.features.forEach(feature => {
                        const item = document.createElement('li');
                        item.className = 'px-4 py-2 text-sm text-gray-700 hover:bg-indigo-50 cursor-pointer transition duration-150 ease-in-out';
                        item.textContent = feature.properties.label;
                        
                        item.addEventListener('click', function() {
                            addressInput.value = feature.properties.label;
                            latitudeField.value = feature.geometry.coordinates[1];
                            longitudeField.value = feature.geometry.coordinates[0];
                            suggestionList.innerHTML = '';
                        });
                        
                        suggestionList.appendChild(item);
                    });
                })
                .catch(error => console.error('Erreur lors de la recherche d\'adresse:', error));
        });
        
        // Cacher les suggestions quand on clique ailleurs
        document.addEventListener('click', function(e) {
            if (e.target !== addressInput) {
                const suggestionList = document.getElementById('address-suggestions');
                if (suggestionList) {
                    suggestionList.innerHTML = '';
                }
            }
        });
    }
    
    initAddressAutocomplete();
});
</script>
<style>
#address-suggestions {
    max-height: 200px;
    overflow-y: auto;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    z-index: 50;
}
</style>
{% endblock %}
